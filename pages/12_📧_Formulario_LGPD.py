import streamlit as st
import firebase_admin
from firebase_admin import credentials, firestore
from datetime import datetime
import pytz

st.set_page_config(page_title="Solicita√ß√£o LGPD - IPEM-MG", page_icon="üì®", layout="wide")

# Inicializa Firebase
if not firebase_admin._apps:
    cred = credentials.Certificate(dict(st.secrets["firebase"]))
    firebase_admin.initialize_app(cred)
db = firestore.client()

# === FORMUL√ÅRIO (acess√≠vel a todos) ===
st.title("üì® Formul√°rio de Solicita√ß√£o a Dados Pessoais - LGPD")

with st.form("formulario_lgpd"):
    nome = st.text_input("Nome completo")
    telefone = st.text_input("Telefone de contato")
    email = st.text_input("E-mail de contato")
    cpf = st.text_input("CPF")
    mensagem = st.text_area("Mensagem")

    enviado = st.form_submit_button("üì© Enviar Solicita√ß√£o")

if enviado:
    if nome and telefone and email and cpf and mensagem:
        br_tz = pytz.timezone("America/Sao_Paulo")
        data_envio = datetime.now(br_tz)

        db.collection("solicitacoes").add({
            "nome": nome,
            "telefone": telefone,
            "email": email,
            "cpf": cpf,
            "mensagem": mensagem,
            "data_envio": data_envio
        })
        st.success("‚úÖ Solicita√ß√£o enviada com sucesso!")
    else:
        st.warning("‚ö†Ô∏è Por favor, preencha todos os campos.")

# === VISUALIZA√á√ÉO ADMINISTRATIVA (restrita) ===
if st.session_state.get("logado"):
    st.markdown("---")
    st.subheader("üìÅ Solicita√ß√µes Recebidas")

    br_tz = pytz.timezone("America/Sao_Paulo")

    # FILTRO POR DATA
    st.markdown("### üîé Filtrar por data")
    data_inicio = st.date_input("Data inicial", value=datetime.now(br_tz).date())
    data_fim = st.date_input("Data final", value=datetime.now(br_tz).date())

    dt_inicio = datetime.combine(data_inicio, datetime.min.time()).astimezone(br_tz)
    dt_fim = datetime.combine(data_fim, datetime.max.time()).astimezone(br_tz)

    # Busca e exibe solicita√ß√µes
    solicitacoes = db.collection("solicitacoes").order_by("data_envio", direction=firestore.Query.DESCENDING).stream()

    for doc in solicitacoes:
        dados = doc.to_dict()
        data_envio = dados.get("data_envio")

        if isinstance(data_envio, datetime):
            if data_envio.tzinfo is None:
                data_envio = data_envio.replace(tzinfo=pytz.UTC)
            data_brasil = data_envio.astimezone(br_tz)

            if not (dt_inicio <= data_brasil <= dt_fim):
                continue

            with st.expander(f"üßæ Solicita√ß√£o de {dados.get('nome')} em {data_brasil.strftime('%d/%m/%Y %H:%M')}"):
                st.markdown(f"**üìß E-mail:** {dados.get('email')}")
                st.markdown(f"**üìû Telefone:** {dados.get('telefone')}")
                st.markdown(f"**üÜî CPF:** {dados.get('cpf')}")
                st.markdown(f"**üí¨ Mensagem:** {dados.get('mensagem')}")
                st.markdown(f"**üìÖ Data de envio:** {data_brasil.strftime('%d/%m/%Y %H:%M')}")

                if st.button(f"üóëÔ∏è Deletar mensagem de {dados.get('nome')}", key=f"del_{doc.id}"):
                    db.collection("solicitacoes").document(doc.id).delete()
                    st.success("‚úÖ Mensagem deletada com sucesso.")
                    st.rerun
else:
    st.info("üîê √Årea restrita. Fa√ßa login como administrador para visualizar as solicita√ß√µes.")
