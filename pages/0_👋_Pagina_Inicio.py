import streamlit as st
import base64
import os
import feedparser
from datetime import datetime
from PIL import Image

def image_to_base64(img_path):
    with open(img_path, "rb") as img_file:
        return base64.b64encode(img_file.read()).decode()
        
from login_unificado import registrar_usuario, autenticar_usuario

def render():
    st.title("üîÑ Fluxo de Dados LGPD")
    st.markdown("---")
    st.markdown("""
    Visualiza√ß√£o dos principais fluxos de dados pessoais no IPEM-MG e as medidas de prote√ß√£o em cada etapa:
    """)

    st.subheader("1. Coleta de Dados")
    st.markdown("""
    **Fontes:**
    - Formul√°rios f√≠sicos e digitais
    - Sistemas internos
    - Parceiros e outras fontes leg√≠timas

    **Medidas:**
    - Informar finalidade e base legal
    - Coletar apenas o necess√°rio
    - Obter consentimento quando aplic√°vel
    """)

    st.subheader("2. Armazenamento")
    st.markdown("""
    **Locais:**
    - Bancos de dados seguros
    - Sistemas com controle de acesso
    - Arquivos f√≠sicos em locais restritos

    **Medidas:**
    - Criptografia de dados sens√≠veis
    - Controle de acesso baseado em fun√ß√£o
    - Backup regular e seguro
    """)

    st.subheader("3. Processamento/Uso")
    st.markdown("""
    **Atividades:**
    - An√°lise para tomada de decis√£o
    - Presta√ß√£o de servi√ßos p√∫blicos
    - Gest√£o interna

    **Medidas:**
    - Acesso apenas por pessoal autorizado
    - Registro de opera√ß√µes
    - Monitoramento de atividades
    """)

    st.subheader("4. Compartilhamento")
    st.markdown("""
    **Destinat√°rios:**
    - Outros √≥rg√£os p√∫blicos
    - Parceiros contratados
    - Autoridades quando exigido por lei

    **Medidas:**
    - Acordos de confidencialidade
    - Anonimiza√ß√£o quando poss√≠vel
    - Canais seguros de transfer√™ncia
    """)

    st.subheader("5. Descarte")
    st.markdown("""
    **Quando:**
    - Cumprida a finalidade
    - Expirado prazo de reten√ß√£o
    - Solicita√ß√£o de exclus√£o pelo titular

    **Medidas:**
    - Exclus√£o segura (digital)
    - Destrui√ß√£o f√≠sica adequada
    - Registro do descarte
    """)

    # Rodap√© com imagens base64
    try:
        icone_ipem = image_to_base64("icone_ipem.png")
        lgpd_logo = image_to_base64("lgpd_logo.png")

        st.markdown(f"""
        <style>
            .footer {{
                position: fixed;
                bottom: 10px;
                right: 50px;
                display: flex;
                gap: 10px;
            }}
            .footer img {{
                width: 50px;
                height: auto;
                transition: transform 0.3s ease;
            }}
            .footer img:hover {{
                transform: scale(1.2);
            }}
        </style>

        <div class="footer">
            <img src="data:image/png;base64,{icone_ipem}" alt="√çcone IPEM">
            <img src="data:image/png;base64,{lgpd_logo}" alt="Logo LGPD">
        </div>
        """, unsafe_allow_html=True)

    except FileNotFoundError:
        st.error("Erro: N√£o foi poss√≠vel carregar uma ou ambas as imagens. Verifique os caminhos e tente novamente.")

    # Rodap√© texto
    st.markdown("""
    <hr>
    <p style="text-align: center; color: gray;">
        ¬© 2025 IPEM-MG. Promovendo privacidade e seguran√ßa de dados. Todos os Direitos Reservados.
    </p>
    """, unsafe_allow_html=True)
